= styles_for :lead
- view   ||= controller.controller_name
- action ||= controller.action_name
- sidebar = "#{view}/sidebar_#{action}" unless action.to_s == 'show'
- sidebar = "admin/#{sidebar}" if controller.class.to_s.starts_with?("Admin::")
-# = render 'search'

.remote#options{ hidden }
-# .list#leads
-#   - if @leads.any?
-#     = render @leads
-#   - else
-#     = render "shared/empty"
%div.mt-2
  %h1 LEADS

%div#popupContainer.popup
  %div.popup-content
    .remote#create_lead{ hidden }

%div#editLeadPopup.popup
  %div.popup-content
    %div#edit_lead{ hidden }

%div.leadsBoxContainer.mt-2
  = render 'entities/title_bar'
  %div.testTOCheck.mt-2
    %div.flex.mt-2
      %div.input-with-icon.mar-r
        %button.newCustomButton{"data-bs-target" => "#exampleModalTwo", "data-bs-toggle" => "modal", type: "button"}
          %span.button-text Sort
        %i.fa.fa-user.mar-r-icons-2
      %div
        %div.input-with-icon
          %button.newCustomButton{"data-bs-target" => "#exampleModalThree", "data-bs-toggle" => "modal", type: "button"}
            12/03/24 - 12/10/24
          %i.fa.fa-user.mar-r-icons
    %div.flex.mt-2
      %div.mar-r
        %div.input-with-icon
          %button.newCustomButton{"data-bs-target" => "#exampleModal", "data-bs-toggle" => "modal", type: "button"}
            Filters
          %i.fa.fa-user.mar-r-icons-2
  %div.table-responsive
    %table.fs-14.tableBorderLeads.mt-2
      %thead
        %tr
          %th.p-14.theadLeads Lead Name
          %th.p-14.theadLeads Company Name
          %th.p-14.theadLeads Main Phone
          %th.p-14.theadLeads Main Email
          %th.p-14.theadLeads Lead Status
          %th.p-14.theadLeads Create Lead
          %th.p-14.theadLeads Lead Owner
          %th.p-14.theadLeads Action
      %tbody
        - @leads.each do |lead|
          %tr
            %td
              %div.cell-content
                = "#{lead.first_name} #{lead.last_name}"
            %td= lead.company
            %td= lead.phone || lead.mobile
            %td= lead.email
            %td{:class => lead_status_class(lead.status)}= lead.status
            %td= lead.created_at.strftime("%Y-%m-%d") # Adjust date format if needed
            %td= lead.assigned_to # Assuming assigned_to is the lead owner
            %td.edit-lead-link
              = link_to_inline(:edit_lead, edit_lead_path(lead), text: t(:edit)) + " | "
#exampleModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "exampleModalLabel", tabindex: "-1"}
  .modal-dialog
    .modal-content
      .modal-header
        %h5#exampleModalLabel.modal-title Modal title
        %button.btn-close{"aria-label" => "Close", "data-bs-dismiss" => "modal", type: "button"}
      .modal-body
        = content_for :sidebar
        - begin
          = render sidebar if sidebar
          - rescue MissingTemplate
      .modal-footer
        %button.btn.btn-secondary{"data-bs-dismiss" => "modal", type: "button"} Close
        %button.btn.btn-primary{type: "button"} Save changes


#exampleModalTwo.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "exampleModalLabel", tabindex: "-1"}
  .modal-dialog
    .modal-content
      .modal-header
        %h5#exampleModalLabel.modal-title SORT LEADS
        %button.btn-close{"aria-label" => "Close", "data-bs-dismiss" => "modal", type: "button"}
      .modal-body
        %div 
          %div
            %div.flex.al-item
              %div
                %input{type: "checkbox", class:"custom-checkbox-leads"}
              %div
                %label
                  Ascending
            %div.flex.al-item
              %div
                %input{type: "checkbox", class:"custom-checkbox-leads"}
              %div
                %label
                  Descending
            %div.flex.al-item
              %div
                %input{type: "checkbox", class:"custom-checkbox-leads"}
              %div
                %label
                  Recently Viewed
            %div.flex.al-item
              %div
                %input{type: "checkbox", class:"custom-checkbox-leads"}
              %div
                %label
                  Recently added
      .modal-footer
        %button.btn.btn-secondary{"data-bs-dismiss" => "modal", type: "button"} Close
        %button.btn.btn-primary{type: "button"} Save changes

#exampleModalThree.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "exampleModalLabel", tabindex: "-1"}
  .modal-dialog
    .modal-content
      .modal-header
        %h5#exampleModalLabel.modal-title DATES
        %button.btn-close{"aria-label" => "Close", "data-bs-dismiss" => "modal", type: "button"}
      .modal-body
        %div 
          %div
            %div.flex.al-item
              %div
                %input{type: "checkbox", class:"custom-checkbox-leads"}
              %div
                %label
                  Today
            %div.flex.al-item
              %div
                %input{type: "checkbox", class:"custom-checkbox-leads"}
              %div
                %label
                  Yesterday
            %div.flex.al-item
              %div
                %input{type: "checkbox", class:"custom-checkbox-leads"}
              %div
                %label
                  Last 7 Days
            %div.flex.al-item
              %div
                %input{type: "checkbox", class:"custom-checkbox-leads"}
              %div
                %label
                  Last 30 Days
            %div.flex.al-item
              %div
                %input{type: "checkbox", class:"custom-checkbox-leads"}
              %div
                %label
                  Custom Range
      .modal-footer
        %button.btn.btn-secondary{"data-bs-dismiss" => "modal", type: "button"} Close
        %button.btn.btn-primary{type: "button"} Save changes

#paginate= render "shared/paginate_with_per_page"
#export= render "shared/export"
:javascript 

  document.addEventListener('DOMContentLoaded', function() {
  var editLinks = document.querySelectorAll('.edit-lead-link');
  console.log("editLinks", editLinks)
  var editLeadPopup = document.getElementById('editLeadPopup');
  console.log("editLeadPopup", editLeadPopup)
  var closeEditLeadPopup = document.getElementById('closeEditLeadPopup');

  // create js

  //edit js 
  editLinks.forEach(function(link) {
  link.addEventListener('click', function(event) {
    event.preventDefault();
    editLeadPopup.classList.toggle('show');
    console.log("Edit link clicked");  // Check if click event is detected
    // Add your logic to open the popup here
  });
  });
  if (closeEditLeadPopup) {
    closeEditLeadPopup.addEventListener('click', function() {
      editLeadPopup.classList.remove('show');
    });
  }
  });


 


  
