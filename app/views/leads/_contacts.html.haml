- edit ||= false
- collapsed = session[:lead_contact].nil? # && @lead.errors.empty?
= subtitle :lead_contact, collapsed, t(:contacts)

.section
  %small#lead_contact_intro{ hidden_if(!collapsed) }
    = t(:intro, t(:lead_info_small)) unless edit

  .contact-form.contactsContainer{ hidden_if(collapsed) }
    %h3 Contact Information
    %div
      %div.flex.gap-custom
        %div
          %div
            = label_tag :contact_first_name, "First Name"
          %div
            = text_field_tag :contact_first_name, nil, id: "contact_first_name", class: "w-custom-laead-form"
        %div
          %div
            = label_tag :contact_last_name, "Last Name"
          %div
            = text_field_tag :contact_last_name, nil, id: "contact_last_name", class: "w-custom-laead-form"
      %div.flex.gap-custom
        %div
          %div
            = label_tag :contact_email, "Email"
          %div
            = text_field_tag :contact_email, nil, id: "contact_email", class: "w-custom-laead-form"
        %div
          %div
            = label_tag :contact_phone, "Main Phone"
          %div
            = text_field_tag :contact_phone, nil, id: "contact_phone", class: "w-custom-laead-form"
      %div.flex.gap-custom
        %div
          %div
            = label_tag :contact_mobile, "Mobile"
          %div
            = text_field_tag :contact_mobile, nil, id: "contact_mobile", class: "w-custom-laead-form-street-long"
      %div.flex.gap-custom
        %div
          %div
            = label_tag :contact_title, "Title"
          %div
            = text_field_tag :contact_title, nil, id: "contact_title", class: "w-custom-laead-form"
        %div
          %div
            = label_tag :contact_department, "Department"
          %div
            = text_field_tag :contact_department, nil, id: "contact_department", class: "w-custom-laead-form"
    %br
    %button.btn.btn-primary{ type: 'button', id: 'add-contact' } Add Contact

  .row#contacts.margin-top-1.hidden
    = f.fields_for :contacts  do |r|
      = r.hidden_field :id, class: 'contact', data: { idx: r.index }
      = r.hidden_field :first_name, class: 'contact', data: { idx: r.index }
      = r.hidden_field :last_name, class: 'contact', data: { idx: r.index }
      = r.hidden_field :email, class: 'contact', data: { idx: r.index }
      = r.hidden_field :phone, class: 'contact', data: { idx: r.index }
      = r.hidden_field :title, class: 'contact', data: { idx: r.index }
      = r.hidden_field :department, class: 'contact', data: { idx: r.index }
      = r.hidden_field :mobile, class: 'contact', data: { idx: r.index }
      = r.hidden_field :user_id, class: 'contact', data: { idx: r.index }

  .contacts-list.contactsContainerTable{ hidden_if(collapsed) }
    %h3 Contacts
    %table#contacts-table.fs-14.tableBorderLeadsContacts
      %thead
        %tr
          %th.theadLeads
          %th.p-14.theadLeads First Name
          %th.p-14.theadLeads Last Name
          %th.p-14.theadLeads Email
          %th.p-14.theadLeads Phone
          %th.p-14.theadLeads Title
          %th.p-14.theadLeads Department
          %th.p-14.theadLeads Mobile
          %th.p-14.theadLeads action
          %th.p-14.theadLeads
      %tbody.mt-1
        - @lead.contacts.order(id: :asc).each_with_index do |contact, idx|
          - if contact.id
            %tr{ id: "contact_#{contact.id}", data: { id: contact.id } }
              %td#p-10= contact.first_name
              %td#p-10= contact.last_name
              %td#p-10= contact.email
              %td#p-10= contact.phone
              %td#p-10= contact.title
              %td#p-10= contact.department
              %td#p-10= contact.mobile
              %td#p-10
                = link_to 'Edit', '#', class: 'edit-contact add_fields', data: { idx: idx }
                = link_to 'Delete', '#', class: 'remove-contact add_fields', data: { idx: idx }



:css
  #contacts-table {
    width: 100%;
  }

  #p-10{
  padding: 10px !important;
  }


:javascript

  let contactsTotal = $('input.contact').length;
  const addContactButton = $('#add-contact');
  const divContacts = $('div#contacts');
  const tableContacts = $('table#contacts-table tbody');
  var currentUserId = "#{current_user.id}";
  let currentEditIdx = null;
  let rowId = null;

  addContactButton.on('click', function(e) {
    e.preventDefault();

    // Coletar valores dos campos de contato
    const id = $('#contact_id').val();
    const firstName = $('#contact_first_name').val();
    const lastName = $('#contact_last_name').val();
    const email = $('#contact_email').val();
    const phone = $('#contact_phone').val();
    const title = $('#contact_title').val();
    const department = $('#contact_department').val();
    const mobile = $('#contact_mobile').val();
    const userId = $('#contact_user_id').val() || currentUserId;

    if (firstName && lastName && email && phone) {
      if (currentEditIdx === null) {
        // Adicionar novo contato
        const contactId = `new_${contactsTotal}`;

        // Adicionar campos ocultos ao formulário
        appendContactField('first_name', firstName, contactsTotal);
        appendContactField('last_name', lastName, contactsTotal);
        appendContactField('email', email, contactsTotal);
        appendContactField('phone', phone, contactsTotal);
        appendContactField('title', title, contactsTotal);
        appendContactField('department', department, contactsTotal);
        appendContactField('mobile', mobile, contactsTotal);
        appendContactField('user_id', userId, contactsTotal);

        // Adicionar linha à tabela de contatos
        appendContactRow(contactId, firstName, lastName, email, phone, title, department, mobile, contactsTotal, false);

        contactsTotal += 1;
      } else {
        // Editar contato existente
        updateContactField('first_name', firstName, currentEditIdx);
        updateContactField('last_name', lastName, currentEditIdx);
        updateContactField('email', email, currentEditIdx);
        updateContactField('phone', phone, currentEditIdx);
        updateContactField('title', title, currentEditIdx);
        updateContactField('department', department, currentEditIdx);
        updateContactField('mobile', mobile, currentEditIdx);

        // Atualizar linha da tabela de contatos
        // var row = document.querySelector(`#contact_'${currentEditIdx}']`);
        var row = document.querySelector('#' + rowId);

        row.dataset.firstName = firstName;
        row.dataset.lastName = lastName;
        row.dataset.email = email;
        row.dataset.phone = phone;
        row.dataset.title = title;
        row.dataset.department = department;
        row.dataset.mobile = mobile;
        row.querySelector('td:nth-child(1)').textContent = firstName;
        row.querySelector('td:nth-child(2)').textContent = lastName;
        row.querySelector('td:nth-child(3)').textContent = email;
        row.querySelector('td:nth-child(4)').textContent = phone;
        row.querySelector('td:nth-child(5)').textContent = title;
        row.querySelector('td:nth-child(6)').textContent = department;
        row.querySelector('td:nth-child(7)').textContent = mobile;
        

        // Resetar índice de edição
        currentEditIdx = null;
      }

      // Limpar campos do formulário
      $('#contact_first_name').val('');
      $('#contact_last_name').val('');
      $('#contact_email').val('');
      $('#contact_phone').val('');
      $('#contact_title').val('');
      $('#contact_department').val('');
      $('#contact_mobile').val('');

    } else {
      alert('Please fill out all contact fields.');
    }
  });

  function appendContactField(name, value, idx) {
    divContacts.append(`<input type="hidden" value="${value}" name="lead[contacts_attributes][${idx}][${name}]" class="contact" data-idx="${idx}">`);
  }

  function updateContactField(name, value, idx) {
    $(`input.contact[name='lead[contacts_attributes][${idx}][${name}]']`).val(value);
  }

  function appendContactRow(id, firstName, lastName, email, phone, title, department, mobile, idx, isSaved) {
    const removeLink = $(`<a class="remove-contact add_fields" href="#">Delete</a>`);
    const editLink = $(`<a class="edit-contact add_fields" href="#">Edit</a>`);
    removeLink.data('idx', idx);
    editLink.data('idx', idx);
    const row = $(`<tr id="${id}" data-idx="${idx}"></tr>`);
    row.append(`<td></td>`);
    row.append(`<td>${firstName}</td>`);
    row.append(`<td>${lastName}</td>`);
    row.append(`<td>${email}</td>`);
    row.append(`<td>${phone}</td>`);
    row.append(`<td>${title}</td>`);
    row.append(`<td>${department}</td>`);
    row.append(`<td>${mobile}</td>`);
    row.append($('<td></td>').append(editLink));
    row.append($('<td></td>').append(removeLink))
    tableContacts.append(row);

    removeLink.on('click', function(e) {
      e.preventDefault();
      const idx = $(this).data('idx');
      if (isSaved) {
        // Adicionar campo _destroy para registros salvos
        appendDestroyField(idx);
        row.hide();
      } else {
        // Remover campos ocultos e linha da tabela para novos registros
        removeContactField(idx);
        row.remove();
      }
    });

    editLink.on('click', function(e) {
      e.preventDefault();
      currentEditIdx = $(this).data('idx');
      $('#contact_first_name').val(row.find('td').eq(0).text());
      $('#contact_last_name').val(row.find('td').eq(1).text());
      $('#contact_email').val(row.find('td').eq(2).text());
      $('#contact_phone').val(row.find('td').eq(3).text());
      $('#contact_title').val(row.find('td').eq(4).text());
      $('#contact_department').val(row.find('td').eq(5).text());
      $('#contact_mobile').val(row.find('td').eq(6).text());
    });
  }

  function appendDestroyField(idx) {
    divContacts.append(`<input type="hidden" value="true" name="lead[contacts_attributes][${idx}][_destroy]" class="contact" data-idx="${idx}">`);
  }

  function removeContactField(idx) {
    $(`input.contact[data-idx=${idx}]`).remove();
  }

  // Adicionar evento de remoção para contatos já salvos
  $('table#contacts-table tbody tr').each(function() {
    const row = $(this);
    const idx = row.find('a.remove-contact').data('idx');
    row.find('a.remove-contact').on('click', function(e) {
      e.preventDefault();
      appendDestroyField(idx);
      row.hide();
    });
    row.find('a.edit-contact').on('click', function(e) {
      e.preventDefault();
      currentEditIdx = idx;
      rowId = row.attr('id');
      $('#contact_first_name').val(row.find('td').eq(0).text());
      $('#contact_last_name').val(row.find('td').eq(1).text());
      $('#contact_email').val(row.find('td').eq(2).text());
      $('#contact_phone').val(row.find('td').eq(3).text());
      $('#contact_title').val(row.find('td').eq(4).text());
      $('#contact_department').val(row.find('td').eq(5).text());
      $('#contact_mobile').val(row.find('td').eq(6).text());
    });
  });
